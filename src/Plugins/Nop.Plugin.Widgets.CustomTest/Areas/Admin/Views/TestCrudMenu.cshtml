@model StudentModel

@{
    //page title
    ViewBag.PageTitle = T("Admin.Plugins.Crudtest").Text;
    //active menu item (system name)
    NopHtml.SetActiveMenuItemSystemName("CustomTest");
}

@{
    const string hideSearchBlockAttributeName = "Plugins.HideSearchBlock";
    var hideSearchBlock = await genericAttributeService.GetAttributeAsync<bool>(await workContext.GetCurrentCustomerAsync(), hideSearchBlockAttributeName);
}

<div class="content-header clearfix">
    <h1 class="float-left">
        @T("Admin.Plugins.CrudTestList")
    </h1>
    <div class="float-right">
        <a asp-action="StudentPostCreate" class="btn btn-primary">
            <i class="fas fa-plus-square"></i>
            @T("Admin.Common.AddNew")
        </a>
        @*    @await Component.InvokeAsync(typeof(AdminWidgetViewComponent), new { widgetZone = AdminWidgetZones.BlogListButtons, additionalData = Model }) *@
    </div>
</div>

<section class="content">
    <div class="container-fluid">
        <div class="form-horizontal">
            <div class="form-horizontal">
                <div class="cards-group">

                    <div class="card card-default card-search">
                        <div class="card-body">
                            <div class="row search-row @(!hideSearchBlock ? "opened" : "")" data-hideAttribute="@hideSearchBlockAttributeName">
                                <div class="search-text">Search</div>
                                <div class="icon-search"><i class="fas fa-search" aria-hidden="true"></i></div>
                                <div class="icon-collapse"><i class="far fa-angle-@(!hideSearchBlock ? "up" : "down")" aria-hidden="true"></i></div>
                            </div>

                            <div class="search-body @(hideSearchBlock ? "closed" : "")">
                                <div class="row">
                                    <div class="col-md-6">
                                        @*                                         <div class="form-group row" >
                                        <div class="col-md-4">
                                        <nop-label asp-for="BlogPosts.SearchStoreId" />
                                        </div>
                                        <div class="col-md-8">
                                        <nop-select asp-for="BlogPosts.SearchStoreId" asp-items="Model.BlogPosts.AvailableStores" />
                                        </div>
                                        </div> *@
                                        <div class="form-group row">
                                            <div class="col-md-4">
                                                <nop-label asp-for="SearchTitle" />
                                            </div>
                                            <div class="col-md-8">
                                                <nop-editor asp-for="SearchTitle" />
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-8 offset-md-4">
                                        <button type="button" id="search-blogpost" class="btn btn-primary btn-search">
                                            <i class="fas fa-search"></i>
                                            @T("Admin.Common.Search")
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="card card-default">
                        <div class="card-body">
                            @await Html.PartialAsync("Table", new DataTablesModel
                       {
                           Name = "studentList-grid",
                           UrlRead = new DataUrl("GetAllStudentList", "CustomTest", null),
                           SearchButtonId = "search-student",
                           Length = 10,
                           LengthMenu = "10, 20, 50, 100",
                           // Length = Model.StudentPosts.PageSize,
                           // LengthMenu = Model.StudentPosts.AvailablePageSizes,
                           Filters = new List<FilterParameter>(),
                           ColumnCollection = new List<ColumnProperty>
                            {
                            new ColumnProperty(nameof(StudentModel.Age))
                            {
                            Title = "Age",
                            Width = "100"
                            },
                            new ColumnProperty(nameof(StudentModel.Name))
                            {
                            Title = "Name",
                            Width = "100"
                            },
                            new ColumnProperty(nameof(StudentModel.Id))
                            {
                            Title = T("Admin.Common.Edit").Text,
                            Width = "100",
                            ClassName = NopColumnClassDefaults.Button,
                            Render = new RenderButtonEdit(new DataUrl("StudentPostEdit"))
                            },
                         }
                       })
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>